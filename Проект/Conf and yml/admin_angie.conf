server {
    listen 80;
    server_name admin-angie.ru  www.admin-angie.ru;
    return 301 https://admin-angie.ru$request_uri;
}

upstream admin_angie {
    zone upstream-backend 256k;
    #hash $scheme$request_uri;
    #random;
    server 192.168.0.253:9000 slow_start=5 max_conns=200 weight=4 sid=white;
    server 192.168.0.253:9001 slow_start=5 max_conns=200 sid=blue backup;
    server 192.168.0.253:9002 slow_start=5 max_conns=200 sid=green;
    server 192.168.0.253:9003 slow_start=5 max_conns=200 weight=4 fail_timeout=5s sid=gold;
    sticky route $arg_route;
    sticky_strict on;
}

server {
#    listen 80;
    listen 443 ssl;
    listen 443 quic;
    server_name admin-angie.ru;
    http2 on;
    http3 on;

   #limit_conn perip 1;
    status_zone admin-angie;

    satisfy any;
    allow 192.168.0.253;

    auth_basic "Identify yourself!";
    auth_basic_user_file /etc/angie/htpasswd;

    quic_gso on;
    quic_retry off;

    brotli             on;
    brotli_static      on;
    brotli_comp_level   5;
    brotli_types       text/plain text/css text/xml application/javascript application/json image/x-icon image/svg+xml;

    error_page 404 /error/index.html;

#Прописываем сертификат открытого и закрытого ключа
    ssl_certificate /etc/letsencrypt/live/admin-angie.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/admin-angie.ru/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384>
    ssl_prefer_server_ciphers off;
    ssl_dhparam /etc/angie/dhparam.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
        root /var/www/wordpress;
#    root /var/www/static-site;
    index index.php index.html index.htm;

    location ~ /\. {
                deny all;
    }

    location ~ ^/wp-content/cache {
                deny all;
    }

    location ~* /(?:uploads|files)/.*\.php$ {
                deny all;
    }

    location /wp-content {
        add_header Cache-Control "max-age=31536000, public, no-transform, immutable";
    }

    location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
        add_header Cache-Control "max-age=31536000, public, no-transform, immutable";
    }

    location /status/ {
        api /status/;
        api_config_files on;
    }

    location ^~ /console/ {
        allow all;
        alias /usr/share/angie-console-light/html/;
                index index.html index.htm index.php;

        location /console/api/ {
        api /status/;
        }
        #Отулючвем кэширование локально для Console Angie
        location ~* \.(html|htm)$ {
        # Здесь указываем настройки без кэширования
                proxy_cache off;
        # Другие нужные настройки...
        }
    }

    location =/p8s {
        prometheus all;
    }
#Определяем правила обработки запросов, приходящие на корень сайтя /
    location / {
        status_zone location_/;
#Устанавливаем заголовок HTSTS, который укызывает браузеру использовать HTTPS к нашему домену в течение года
        add_header Strict-Transport-Security max-age=31536000;
#Заголовок информирующий клиенат о поддержке HTTP/3 на порту 443 на 24 часа
        add_header Alt-Svc 'h3=":443"; ma=86400';
        limit_req zone=lone burst=50;

        proxy_pass http://admin_angie;
        proxy_http_version  1.1;

        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        keep-alive;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;

        index index.php index.html index.htm;
        try_files $uri $uri/ =404;
#       try_files $uri $uri/ /index.php$is_args$args;
   }

    location /assets {
        add_header Cache-Control $cache_control;
    }

    location /error {
        add_header Cache-Control $cache_control;
    }

    location ~ \.php$ {
        include fastcgi_params;
        include fastcgi.conf;
        fastcgi_intercept_errors on;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # Кэширование HTML
    location ~* \.(html|htm)$ {
    # Включаем кэширование
         proxy_cache one;
    # Устанавливаем срок действия кэша для успешных запросов
         proxy_cache_valid 200 1h;
         proxy_cache_lock on;
         proxy_cache_min_uses 2;
         proxy_ignore_headers "Cache-Control" "Expires";
         proxy_cache_use_stale updating error timeout invalid_header http_500 http_502 http_503 http_504;
    # Для проверки статуса кэша
         add_header X-Cache-Status $upstream_cache_status;
    }

                    # Кэширование статических файлов
                location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot|otf|ttc|mp4|avi|webm|mkv)$ {
                    # Устанавливаем срок действия для кэширования
                        expires 30d;
                   # Отключаем логирование запросов для статических файлов
                         access_log off;
                         add_header Cache-Control "public";
                 }
#       location /static/ {
#               alias /var/www/wordpress;
#               access_log off;
#               expires max;
#       }
}

